#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int dx[4] = {0, 0, 1, -1};
int dy[4] = {1, -1, 0, 0};

char moveTypes[4] = {'U', 'D', 'R', 'L'};

bool check[11][11][4];

int oppositeDir(int dir) {
    if(dir == 0) return 1;
    if(dir == 1) return 0;
    if(dir == 2) return 3;
    if(dir == 3) return 2;
}

int solution(string dirs) {
    int answer = 0;
    int x = 0, y = 0;  //시작 좌표
    
    for(int i = 0 ; i < dirs.length() ; i++) {
        
        int nx = -1, ny = -1;
        int dir = -1;
        
        for(int j = 0 ; j < 4 ; j++) {
            if(dirs[i] == moveTypes[j]) {
                nx = x + dx[j];
                ny = y + dy[j];
                dir = j;
                break;
            }
        }
                    
        if(nx < -5 || nx > 5 || ny < -5 || ny > 5) {
            continue;
        }
        
        if(!check[x + 5][y + 5][dir]) {
            check[x + 5][y + 5][dir] = true;
            check[nx + 5][ny + 5][oppositeDir(dir)] = true;
            answer++;        
        }
        
        x = nx;
        y = ny;
    }
    
    return answer;
}
